version: '3.6'
services:
  keycloak:
    container_name: rems_dev_keycloak
    # command: ["-Djboss.http.port=8180"]
    ports:
      - '8180:8080'
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
      - KEYCLOAK_IMPORT=/resources/ClientFhirServerRealm.json
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data/
      - '../test-ehr/src/main/resources/ClientFhirServerRealm.json:/resources/ClientFhirServerRealm.json'
    image: hkong2/keycloak

  # Create test ehr container
  test-ehr: # Name of our service
    container_name: rems_dev_test-ehr
    ports: # Port binding to host from docker container
      - '8080:8080' # Bind port 3000 of host to 3000 of container
      - "8081:8081"
    environment:
      - DOCKER_PROFILE=true
    build: 
      context: ../test-ehr
      dockerfile: Dockerfile.dev 
    volumes:
      - rems_dev_test-ehr-sync:/test-ehr:nocopy #  nocopy is important
      - /test-ehr/.gradle
      - /test-ehr/build
      - /test-ehr/target
      - /test-ehr/bin


  # Create crd container
  crd: # Name of our service
    build: 
      context: ../CRD
      dockerfile: Dockerfile.dev 
    container_name: rems_dev_crd
    ports: # Port binding to host from docker container
      - "8090:8090" # Bind port 3000 of host to 3000 of container
      - "8091:8091"
    environment:
      VSAC_API_KEY: ${VSAC_API_KEY}
    volumes:
      - rems_dev_crd-sync:/CRD:nocopy #  nocopy is important
      - /CRD/.gradle


  # Create crd request generator container
  crd-request-generator: # Name of our service
    build: 
      context: ../crd-request-generator
      dockerfile: Dockerfile.dev 
    container_name: rems_dev_crd-request-generator
    environment:
      - REACT_APP_REMS_CONFIG=true
    ports: # Port binding to host from docker container
      - "3000:3000" # Bind port 3000 of host to 3000 of container
      - "3001:3001"
    volumes:
      - rems_dev_crd-request-generator-sync:/home/node/app/crd-request-generator:nocopy #  nocopy is important
      - /home/node/app/crd-request-generator/node_modules
      - /home/node/app/crd-request-generator/databaseData


  # Create dtr container
  dtr: # Name of our service
    build: 
      context: ../dtr
      dockerfile: Dockerfile.dev     
    container_name: rems_dev_dtr
    ports: # Port binding to host from docker container
      - "3005:3005" # Bind port 3000 of host to 3000 of container
      - "3006:3006"
    volumes:
      - rems_dev_dtr-sync:/home/node/app/dtr:nocopy #  nocopy is important
      - /home/node/app/dtr/node_modules
      - /home/node/app/dtr/databaseData


  # Create rems container
  rems: # Name of our service
    build: 
      context: '.'
      dockerfile: Dockerfile.dev     
    container_name: rems_dev_rems
    ports: # Port binding to host from docker container
      - "9015:9015" # Bind port 3000 of host to 3000 of container
    volumes:
      - rems_dev_rems-sync:/REMS:nocopy #  nocopy is important

  pharmacy-information-system: # Name of our service
    build: 
      context: ../pharmacy-information-system
      dockerfile: Dockerfile.dev     
    container_name: rems_dev_pharmacy-information-system
    environment:
      - PORT=3010
      - MONGODB_CONNSTRING=mongodb://pharmacy-information-root:pharmacy-information-password@pharmacy-information-system-database:27017?retryWrites=true&w=majority
    ports: # Port binding to host from docker container
      - "4200:4200" 
      - "3010:3010"
      - "3011:3011"
    volumes:
      - rems_dev_pharmacy-information-system-sync:/home/node/app/pharmacy-information-system:nocopy #  nocopy is important
      - /home/node/app/pharmacy-information-system/node_modules
      - /home/node/app/pharmacy-information-system/backend/node_modules

  pharmacy-information-system-database: # Name of our service
    image: mongo
    container_name: rems_dev_pharmacy-information-system-database
    environment:
      MONGO_INITDB_ROOT_USERNAME: pharmacy-information-root
      MONGO_INITDB_ROOT_PASSWORD: pharmacy-information-password
    expose:
      - "27017"
    ports: # Port binding to host from docker container
      - "27017:27017" 
    volumes:
      - /data/db

volumes:
  keycloak-data:
  rems_dev_test-ehr-sync:
    external: true
  rems_dev_crd-sync:
    external: true
  rems_dev_crd-request-generator-sync:
    external: true
  rems_dev_dtr-sync:
    external: true
  rems_dev_rems-sync:
    external: true
  rems_dev_pharmacy-information-system-sync:
    external: true